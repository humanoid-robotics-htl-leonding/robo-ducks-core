#!/bin/bash

function version_lte() {
    [ "$1" = "`echo -e '$1\n$2' | sort -V | head -n1`" ]
}

function helpMenu {
  echo "Usage: $0 [OPTIONS] NETWORK"
  echo ""
  echo "Options"
  echo " -h, --help                        show this help"
  echo ""
  echo "NETWORK"
  echo " a network name (either ETH or the name of a WiFi network)"
}

if [ $(version_lte $DISTRIB_RELEASE 2.8) ]; then
  if [ $(id -u) -ne 0 ]; then
    exec sudo $0 "$@"
  fi
fi

CONFIG=false
ETH=1
SPL_A=1
SPL_B=1
SPL_C=1
SPL_D=1
SPL_E=1
SPL_F=1
SPL_G=1
SPL_H=1
RC19_SPL_A2G=1
RC19_SPL_A5G=1
RC19_SPL_B2G=1
RC19_SPL_B5G=1
RC19_SPL_C2G=1
RC19_SPL_C5G=1
RC19_SPL_D2G=1
RC19_SPL_D5G=1
RC19_SPL_E2G=1
RC19_SPL_E5G=1
RC19_SPL_F2G=1
RC19_SPL_F5G=1
RC19_SPL_G2G=1
RC19_SPL_G5G=1
RC19_SPL_H2G=1
RC19_SPL_H5G=1
SPL_IO=1
SPL=1

# prepare parameters
PARAMETERS=""
while [ "$#" -gt 0 ]; do
  if [[ $1 =~ ^- ]] && [[ ! $1 =~ ^-- ]]; then
    PARAMETERS+=$(echo "${1:1}" | sed -e "s/\(.\)/ -\1/g")
  else
    PARAMETERS+=" $1"
  fi
  shift
done
eval set -- "${PARAMETERS}";

while [ "$#" -gt 1 ]; do
  case "$1" in
    "-h" | "--help")
      helpMenu
      return 0
      ;;
    *)
      msg -e "Failed to parse \"$1\"!"
      helpMenu
      return 1
      ;;
  esac
  shift
done

if [ "$#" -ne 1 ]; then
  helpMenu
  return 1
fi

NETWORK="$1"

case "${NETWORK}" in
  "spl_a" | "SPL_A")
    SPL_A=0
    NETWORK="SPL_A"
    ;;
  "spl_b" | "SPL_B")
    SPL_B=0
    NETWORK="SPL_B"
    ;;
  "spl_c" | "SPL_C")
    SPL_C=0
    NETWORK="SPL_C"
    ;;
  "spl_d" | "SPL_D")
    SPL_D=0
    NETWORK="SPL_D"
    ;;
  "spl_e" | "SPL_E")
    SPL_E=0
    NETWORK="SPL_E"
    ;;
  "spl_f" | "SPL_F")
    SPL_F=0
    NETWORK="SPL_F"
    ;;
  "spl_g" | "SPL_G")
    SPL_G=0
    NETWORK="SPL_G"
    ;;
  "spl_h" | "SPL_H")
    SPL_H=0
    NETWORK="SPL_H"
    ;;
  "spl_a2" | "SPL_A2")
    RC19_SPL_A2G=0
    NETWORK="SPL_FIELD_2ghz_A"
    ;;
  "spl_a5" | "SPL_A5")
    RC19_SPL_A5G=0
    NETWORK="SPL_FIELD_5ghz_A"
    ;;
  "spl_b2" | "SPL_B2")
    RC19_SPL_B2G=0
    NETWORK="SPL_FIELD_2ghz_B"
    ;;
  "spl_b5" | "SPL_B5")
    RC19_SPL_B5G=0
    NETWORK="SPL_FIELD_5ghz_B"
    ;;
  "spl_c2" | "SPL_C2")
    RC19_SPL_C2G=0
    NETWORK="SPL_FIELD_2ghz_C"
    ;;
  "spl_c5" | "SPL_C5")
    RC19_SPL_C5G=0
    NETWORK="SPL_FIELD_5ghz_C"
    ;;
  "spl_d2" | "SPL_D2")
    RC19_SPL_D2G=0
    NETWORK="SPL_FIELD_2ghz_D"
    ;;
  "spl_d5" | "SPL_D5")
    RC19_SPL_D5G=0
    NETWORK="SPL_FIELD_5ghz_D"
    ;;
  "spl_e2" | "SPL_E2")
    RC19_SPL_E2G=0
    NETWORK="SPL_FIELD_2ghz_E"
    ;;
  "spl_e5" | "SPL_E5")
    RC19_SPL_E5G=0
    NETWORK="SPL_FIELD_5ghz_E"
    ;;
  "spl_f2" | "SPL_F2")
    RC19_SPL_F2G=0
    NETWORK="SPL_FIELD_2ghz_F"
    ;;
  "spl_f5" | "SPL_F5")
    RC19_SPL_F5G=0
    NETWORK="SPL_FIELD_5ghz_F"
    ;;
  "spl_g2" | "SPL_G2")
    RC19_SPL_G2G=0
    NETWORK="SPL_FIELD_2ghz_G"
    ;;
  "spl_g5" | "SPL_G5")
    RC19_SPL_G5G=0
    NETWORK="SPL_FIELD_5ghz_G"
    ;;
  "spl_h2" | "SPL_H2")
    RC19_SPL_H2G=0
    NETWORK="SPL_FIELD_2ghz_H"
    ;;
  "spl_h5" | "SPL_H5")
    RC19_SPL_H5G=0
    NETWORK="SPL_FIELD_5ghz_H"
    ;;
  "spl" | "SPL")
    SPL=0
    ;;
  "spl_io" | "SPL_IO")
    SPL_IO=0
    ;;
  "eth" | "ETH")
    ETH=0
    ;;
  *)
    echo "Unknown network \"${NETWORK}\"!"
    exit 1
    ;;
esac

if [ ${ETH} -eq 0 ]; then
  sed -e s/ssid:.*/ssid:/ -i /home/nao/.local/etc/connman-hulks.yaml
else
 sed -e s/ssid:.*/ssid:\ ${NETWORK}/ -i /home/nao/.local/etc/connman-hulks.yaml
fi
